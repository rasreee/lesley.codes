{
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "simple-import-sort", "prettier"],
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "next",
    "prettier"
  ],
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "env": {
    "es6": true,
    "browser": true,
    "jest": true,
    "node": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "prettier/prettier": "error",
    "react/react-in-jsx-scope": 0,
    "react/display-name": 0,
    "react/prop-types": 0,
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/explicit-member-accessibility": 0,
    "@typescript-eslint/indent": 0,
    "@typescript-eslint/member-delimiter-style": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/no-var-requires": 0,
    "@typescript-eslint/no-use-before-define": 0,
    "@typescript-eslint/no-unused-vars": "warn",
    // Formatting
    "padding-line-between-statements": [
      "error",
      // wildcard inclusions
      {
        "blankLine": "always",
        "prev": [
          "multiline-block-like",
          "multiline-const",
          "multiline-expression"
        ],
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "multiline-block-like",
          "multiline-const",
          "multiline-expression",
          "switch",
          "return"
        ]
      },
      // specific exclusions for case statements
      {
        "blankLine": "never",
        "prev": "case",
        "next": "multiline-block-like"
      },
      {
        "blankLine": "never",
        "prev": "multiline-block-like",
        "next": "case"
      }
    ],
    "arrow-spacing": "error",
    "block-scoped-var": "error",
    "block-spacing": "error",
    "brace-style": "error",
    "comma-dangle": "off",
    "comma-spacing": "error",
    "comma-style": "error",
    "jsx-quotes": "off",
    "key-spacing": ["error"],
    "keyword-spacing": "off",
    "line-comment-position": "off",
    "no-whitespace-before-property": "error",
    "nonblock-statement-body-position": "error",
    "no-unneeded-ternary": "error",
    "no-unreachable-loop": "error",
    "no-unsafe-optional-chaining": "error",
    "no-template-curly-in-string": "error",
    "no-trailing-spaces": "error",
    "no-negated-in-lhs": "error",
    "no-nested-ternary": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-multiple-empty-lines": "error",
    "no-duplicate-imports": "error",
    "new-cap": "error",
    "new-parens": "error",
    "max-depth": "error",
    "max-nested-callbacks": "error",
    "padded-blocks": ["error", "never"],

    "lines-around-directive": "error",
    "lines-between-class-members": "error",
    "operator-linebreak": "error",
    "linebreak-style": "error",
    "object-shorthand": "error",
    "object-curly-newline": "error",
    "object-curly-spacing": ["error", "always"],
    "object-property-newline": [
      "error",
      {
        "allowAllPropertiesOnSameLine": true
      }
    ],
    "newline-after-var": "off",
    "newline-before-return": "off",
    "newline-per-chained-call": "off",
    "func-call-spacing": "off",
    "func-name-matching": "error",
    "func-names": "error",
    "func-style": [
      "error",
      "declaration",
      {
        "allowArrowFunctions": true
      }
    ],
    "function-call-argument-newline": ["error", "consistent"],
    "function-paren-newline": "off",
    "rest-spread-spacing": "error",
    "array-bracket-newline": "off",
    "array-element-newline": ["error", "consistent"],
    "simple-import-sort/imports": "error",
    "quotes": "off",
    "no-extra-semi": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "space-in-parens": ["error", "never"],
    "space-infix-ops": "error",
    "space-unary-ops": [
      "error",
      {
        "words": true,
        "nonwords": false
      }
    ],
    "switch-colon-spacing": "error",
    "template-curly-spacing": "error",
    "template-tag-spacing": "error",
    "yield-star-spacing": "error",
    "yoda": "error",
    "indent": [
      "off",
      2,
      {
        "offsetTernaryExpressions": true
      }
    ],
    "grouped-accessor-pairs": "error",
    "guard-for-in": "error"
  }
}
